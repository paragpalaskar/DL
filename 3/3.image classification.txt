import numpy as np
import matplotlib.pyplot as plt
from keras.datasets import cifar10
from keras.models import Sequential
from keras.layers import Dense, Conv2D
from keras.layers import MaxPool2D,Flatten
from keras.layers import Dropout

(x_train, y_train),(x_test, y_test)=cifar10.load_data()

x_train.shape
x_test.shape

labels = ['ariplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck']

y_train

plt.figure(figsize=(10,10))
for i in range(25):
  plt.subplot(5,5,i+1)
  plt.xticks([])
  plt.title(labels[y_train[1][0]])
  plt.imshow(x_train[i])

x_train = x_train/ 255
x_test = x_test / 255

from keras.utils import to_categorical

y_train_new = to_categorical(y_train)
y_test_new = to_categorical(y_test)

y_train_new.shape
model = Sequential()
model.add(Conv2D(filters=32, input_shape=(32,32,3), kernel_size=(3,3), activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))
model.add(Dropout(0.2))

model.add(Conv2D(filters=64, kernel_size=(3,3), activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))


model.add(Flatten())

model.add(Dense(512, activation='relu'))
model.add(Dense(10, activation='softmax'))

from keras.utils import plot_model
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])

model.fit(x_train, y_train_new, epochs=10, batch_size=20)
model.evaluate(x_test, y_test_new, batch_size=1)
plt.figure(figsize=(1,4))
plt.imshow(x_train[120])

new = x_train[120]
new = new.reshape(1,32,32,3)

labels[np.argmax(model.predict(new))]